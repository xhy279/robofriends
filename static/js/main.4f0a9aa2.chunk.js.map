{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","i","components_Card","key","SearchBox","searchField","searchChange","onChange","type","placeholder","aria-label","Scroll","props","style","overflow","height","border","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","CounterButton_CounterButton","process","App","onRequestRobots","_this$props","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","Header_Header","components_SearchBox","components_Scroll","ErrorBoundry_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialStateSearch","initialStateRobots","logger","createLogger","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","assign","store","createStore","ReactDOM","render","es","src_containers_App","document","getElementById","URL","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f0a9aa2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n return (\n   <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"/>\n      <div>\n        <h2>{ name }</h2>\n        <p>{ email }</p>\n      </div>\n   </div>\n );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  // test ErrorBoundry\n  // if (1) {\n  //   throw new Error('dd');\n  // }\n  return ( \n    <div>\n      { robots.map((i) => {\n          return <Card key={i.id} id={i.id} name={i.name} email={i.email} />\n      })}\n    </div>\n  );\n};\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input \n        onChange={searchChange}\n        className=\"pa3 ba b--green bg-light-blue\"\n        type=\"search\" \n        placeholder=\"Search Robots\"\n        aria-label='Search Robots'\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', height: '800px', border: '5px solid black' }}>\n      { props.children }\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nexport default class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // console.log(error, info);\n    this.setState({\n      hasError: true, \n    });\n  } \n\n  render() {\n    const { hasError } = this.state;\n    return hasError ? \n    (<h1> Opps, some errors </h1>) : this.props.children;  \n  }\n};","import React, { Component } from 'react';\n\nexport default class CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.count !== this.state.count) {\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    this.setState(state => {\n      return { count: state.count + 1 }; \n    }, () => {\n      console.log('state udpate');\n    });\n  }\n  render() {\n    return (\n      <button color={this.props.color} onClick={this.updateCount} >\n        Count: { this.state.count }\n      </button>\n    )\n  }\n}","import React, { Component } from 'react';\nimport CounterButton from './CounterButton';\n\nexport default class Header extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return false; \n  }\n\n  render() {\n    return (\n      <div>\n        <CounterButton color={'red'}></CounterButton>\n        <h1 className=\"f1\">Robofriends</h1>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField, requestRobots} from '../actions';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\n\nconsole.log(process.env.NODE_ENV);\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => {\n      dispatch(requestRobots())\n    },\n  };\n}\n\nclass App extends Component {\n  componentDidMount() {\n    const { onRequestRobots } = this.props;\n    onRequestRobots();\n  }\n\n  render() {\n    const { onSearchChange, searchField, robots, isPending } = this.props;\n    const filteredRobots = robots.filter( robot => \n      robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    return isPending ? \n      (<h1>Loading</h1>) :\n      (\n        <div className='tc'>\n          <Header></Header>\n          <SearchBox searchChange={onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants';\n\n// action is a pure function that takes inputs from page\n// and generate an object with type and payload\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n    .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\n}"," export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\n export const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\n export const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\n export const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\n//\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch(action.type) {\n    case CHANGE_SEARCH_FIELD: \n      return {...state, searchField: action.payload };\n    default: \n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: '',\n}; \n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, { isPending: false, robots: action.payload });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, { isPending: false, error: action.payload });\n    default: \n      return state;\n  }\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'; \nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { searchRobots, requestRobots } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware  from 'redux-thunk';\n\nconst logger = createLogger();\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    logger,\n    thunkMiddleware,\n  ),\n  // other store enhancers if any\n);\n\nconst rootReducer = combineReducers({\n  searchRobots,\n  requestRobots\n});\n\nconst store = createStore(\n  rootReducer,\n  enhancer,\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}